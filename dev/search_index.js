var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Brillouin","category":"page"},{"location":"api/#Exported-types","page":"API","title":"Exported types","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [Brillouin.WignerSeitz, Brillouin.KPath]\nPrivate = false\nOrder   = [:type]","category":"page"},{"location":"api/#Exported-methods","page":"API","title":"Exported methods","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [Brillouin.WignerSeitz, Brillouin.KPath]\nPrivate = false\nOrder   = [:function]","category":"page"},{"location":"api/#Brillouin.WignerSeitz.wignerseitz-Union{Tuple{AbstractArray{var\"#s13\",1} where var\"#s13\"<:(StaticArrays.SArray{Tuple{D},var\"#s42\",1,D} where var\"#s42\"<:Real)}, Tuple{D}} where D","page":"API","title":"Brillouin.WignerSeitz.wignerseitz","text":"wignerseitz(Vs::AbstractVector{<:SVector{D}}; output::Symbol = :polygons, Nmax = 3)\nwignerseitz(Vs::AbstractVector{AbstractVector}; output::Symbol = :polygons, Nmax = 3)\n                                                            --> Cell{D}\n\nReturn a Cell{D} structure, containing the vertices and associated (outward oriented) faces, of the Wigner-Seitz cell defined by a basis Vs in D dimensions.\n\nKeyword arguments\n\noutput (default, :polygons): if set to :polygons, co-planar faces are merged to form polygonal planar faces (triangles, quadrilaterals, and ngons generally). if set to  :triangles, \"unprocessed\" triangles (or, generlaly, faces of order D) are returned.\nNmax (default, 3): includes -Nmax:Nmax points in the initial lattice used to generate the underlying Voronoi tesselation. It is unwise to set this to anything lower than 3 without explicitly testing convergence; and probably unnecessary to increase it beyond 3 as well.\n\n\n\n\n\n","category":"method"},{"location":"api/#Brillouin.KPath.irrfbz_path-Union{Tuple{D}, Tuple{Integer,Integer}, Tuple{Integer,Integer,Union{Nothing, Crystalline.DirectBasis{D}}}} where D","page":"API","title":"Brillouin.KPath.irrfbz_path","text":"irrfbz_path(sgnum::Integer, Nk::Integer, Rs::Union{Nothing, DirectBasis}=nothing; \n    pathtype::String=\"SeeK\", has_inversion_or_tr::Bool=true,\n    splice::Bool=false, legacy::Bool=false)\n                                            --> paths_kvs, paths_labs, lab2kv\n\nReturns a k-path in the (primitive) irreducible Brillouin zone that includes all  distinct high-symmetry lines and points as well as parts of the Brillouin zone boundary.\n\nRs refers to the direct basis of the conventional unitcell. For some space groups, it is needed to disambiguate the \"extended\" Bravais types that may differ depending on the lengths of the lattice vectors (because the Brillouin zone may depend on these lengths). If the requested space group is known to not fall under this case, Rs can be supplied as nothing (default).\n\nData and referencing\n\nAll data is sourced from the SeeK publication[1]: please cite the original work.\n\nAll paths currently assume time-reversal symmetry (or, equivalently, inversion symmetry),  corresponding to the SeeK's [with inversion] setting. If neither inversion nor time-reversal symmetry is present, additional paths may be required (SeeK's [no inversion] setting).\n\n[1] Hinuma, Pizzi, Kumagai, Oba, & Tanaka, Band structure diagram paths based on     crystallography, Comp. Mat. Sci. 128, 140 (2017)](http://dx.doi.org/10.1016/j.commatsci.2016.10.015)     (see also online interface at https://www.materialscloud.org/work/tools/seekpath).\n\n\n\n\n\n","category":"method"},{"location":"api/#Exported-constants","page":"API","title":"Exported constants","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [Brillouin.WignerSeitz, Brillouin.KPath]\nPrivate = false\nOrder   = [:constant]","category":"page"},{"location":"wignerseitz/#Wigner–Seitz-cells","page":"Wigner–Seitz","title":"Wigner–Seitz cells","text":"","category":"section"},{"location":"wignerseitz/#Unit-cells","page":"Wigner–Seitz","title":"Unit cells","text":"","category":"section"},{"location":"wignerseitz/","page":"Wigner–Seitz","title":"Wigner–Seitz","text":"The Wigner–Seitz cell associated with an arbitrary lattice basis can be generated via wignerseitz. For example, to generate the unit cell of a (primitive) lattice with Bravais type cF, we might write:","category":"page"},{"location":"wignerseitz/","page":"Wigner–Seitz","title":"Wigner–Seitz","text":"using Brillouin\n\nRs = [[0.0, 0.5, 0.5], [0.5, 0.0, 0.5], [0.5, 0.5, 0.0]]\ncᴿ = wignerseitz(Rs)","category":"page"},{"location":"wignerseitz/","page":"Wigner–Seitz","title":"Wigner–Seitz","text":"We can plot the generated cells using e.g. PlotlyJS.jl via plot(cᴿ) (or, alternatively, via a 3D-capable backend of AbstractPlotting.jl):","category":"page"},{"location":"wignerseitz/","page":"Wigner–Seitz","title":"Wigner–Seitz","text":"using PlotlyJS\n\nPᴿ = plot(cᴿ)\nMain.HTMLPlot(Pᴿ) # hide","category":"page"},{"location":"wignerseitz/#Brillouin-zones","page":"Wigner–Seitz","title":"Brillouin zones","text":"","category":"section"},{"location":"wignerseitz/","page":"Wigner–Seitz","title":"Wigner–Seitz","text":"To generate an Brillouin zones, we simply give the corresponding reciprocal lattice:","category":"page"},{"location":"wignerseitz/","page":"Wigner–Seitz","title":"Wigner–Seitz","text":"Gs = [[-1.0, 1.0, 1.0], [1.0, -1.0, 1.0], [1.0, 1.0, -1.0]] # reciprocal basis of `Rs`\ncᴳ = wignerseitz(Gs)\nPᴳ = plot(cᴳ)\nMain.HTMLPlot(Pᴳ) # hide","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Brillouin","category":"page"},{"location":"#Brillouin.jl","page":"Home","title":"Brillouin.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Brillouin.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"wignerseitz.md\",\n         \"api.md\"]","category":"page"}]
}
